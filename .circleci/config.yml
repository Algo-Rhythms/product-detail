# version: 2.1
# jobs: # a basic unit of work in a run
#   build: # runs not using `Workflows` must have a `build` job as entry point
#     macos:  # indicate that we are using the macOS executor
#       xcode: 11.3.0 # indicate our selected version of Xcode
#     steps: # a series of commands to run
#       - checkout  # pull down code from your version control system.
#       - run:
#           # run our tests using xcode's cli tool `xcodebuild`
#           name: Run Unit Tests
#           command: xcodebuild test -scheme circleci-demo-macos
#       - run:
#           # build our application
#           name: Build Application
#           command: xcodebuild
#       - run:
#           # compress Xcode's build output so that it can be stored as an artifact
#           name: Compress app for storage
#           command: zip -r app.zip build/Release/circleci-demo-macos.app
#       - store_artifacts: # store this build output. Read more: https://circleci.com/docs/2.0/artifacts/
#           path: app.zip
#           destination: app
version: 2.1
jobs: # a basic unit of work in a run
  test: 
    docker:
      - image: circleci/node:12.18.3
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run: npm install
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
      - run: npm test
      - run: npm run build
orbs:
  node: circleci/node@3.0.0
  slack: circleci/slack@3.4.2
  # eslint: arrai/eslint@2.0.0
workflows:
  tests:
    jobs:
      - test
      # - eslint
  your-workflow:
    jobs:
      - slack/approval-notification:
          message: Pending approval
          webhook: webhook